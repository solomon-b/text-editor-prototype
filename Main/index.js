// Generated by purs version 0.14.1
"use strict";
var Caret = require("../Caret/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Int = require("../Data.Int/index.js");
var Data_Lazy = require("../Data.Lazy/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Editor = require("../Editor/index.js");
var Effect = require("../Effect/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Effect_Console = require("../Effect.Console/index.js");
var Format = require("../Format/index.js");
var Halogen_Aff_Util = require("../Halogen.Aff.Util/index.js");
var Halogen_Component = require("../Halogen.Component/index.js");
var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");
var Halogen_HTML_Elements = require("../Halogen.HTML.Elements/index.js");
var Halogen_HTML_Elements_Keyed = require("../Halogen.HTML.Elements.Keyed/index.js");
var Halogen_HTML_Events = require("../Halogen.HTML.Events/index.js");
var Halogen_HTML_Properties = require("../Halogen.HTML.Properties/index.js");
var Halogen_Query = require("../Halogen.Query/index.js");
var Halogen_Query_Event = require("../Halogen.Query.Event/index.js");
var Halogen_Query_HalogenM = require("../Halogen.Query.HalogenM/index.js");
var Halogen_Query_Input = require("../Halogen.Query.Input/index.js");
var Halogen_VDom_Driver = require("../Halogen.VDom.Driver/index.js");
var Web_DOM_Node = require("../Web.DOM.Node/index.js");
var Web_DOM_NodeList = require("../Web.DOM.NodeList/index.js");
var Web_Event_Event = require("../Web.Event.Event/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_UIEvent_InputEvent = require("../Web.UIEvent.InputEvent/index.js");
var Web_UIEvent_InputEvent_EventTypes = require("../Web.UIEvent.InputEvent.EventTypes/index.js");
var Web_UIEvent_KeyboardEvent = require("../Web.UIEvent.KeyboardEvent/index.js");
var Bold = (function () {
    function Bold() {

    };
    Bold.value = new Bold();
    return Bold;
})();
var Italic = (function () {
    function Italic() {

    };
    Italic.value = new Italic();
    return Italic;
})();
var Stream = (function () {
    function Stream(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Stream.create = function (value0) {
        return function (value1) {
            return new Stream(value0, value1);
        };
    };
    return Stream;
})();
var Heading = (function () {
    function Heading(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Heading.create = function (value0) {
        return function (value1) {
            return new Heading(value0, value1);
        };
    };
    return Heading;
})();
var ListItem = (function () {
    function ListItem(value0) {
        this.value0 = value0;
    };
    ListItem.create = function (value0) {
        return new ListItem(value0);
    };
    return ListItem;
})();
var Text = (function () {
    function Text(value0) {
        this.value0 = value0;
    };
    Text.create = function (value0) {
        return new Text(value0);
    };
    return Text;
})();
var Ann = (function () {
    function Ann(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Ann.create = function (value0) {
        return function (value1) {
            return new Ann(value0, value1);
        };
    };
    return Ann;
})();
var Styled = (function () {
    function Styled(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Styled.create = function (value0) {
        return function (value1) {
            return new Styled(value0, value1);
        };
    };
    return Styled;
})();
var P = (function () {
    function P(value0) {
        this.value0 = value0;
    };
    P.create = function (value0) {
        return new P(value0);
    };
    return P;
})();
var Txt = (function () {
    function Txt(value0) {
        this.value0 = value0;
    };
    Txt.create = function (value0) {
        return new Txt(value0);
    };
    return Txt;
})();
var Row = (function () {
    function Row(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Row.create = function (value0) {
        return function (value1) {
            return new Row(value0, value1);
        };
    };
    return Row;
})();
var Initialize = (function () {
    function Initialize() {

    };
    Initialize.value = new Initialize();
    return Initialize;
})();
var InputChanged = (function () {
    function InputChanged(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    InputChanged.create = function (value0) {
        return function (value1) {
            return new InputChanged(value0, value1);
        };
    };
    return InputChanged;
})();
var KeyPress = (function () {
    function KeyPress(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    KeyPress.create = function (value0) {
        return function (value1) {
            return new KeyPress(value0, value1);
        };
    };
    return KeyPress;
})();
var ApplyStyle = (function () {
    function ApplyStyle(value0) {
        this.value0 = value0;
    };
    ApplyStyle.create = function (value0) {
        return new ApplyStyle(value0);
    };
    return ApplyStyle;
})();
var MkList = (function () {
    function MkList() {

    };
    MkList.value = new MkList();
    return MkList;
})();
var MkHeading = (function () {
    function MkHeading(value0) {
        this.value0 = value0;
    };
    MkHeading.create = function (value0) {
        return new MkHeading(value0);
    };
    return MkHeading;
})();
var tailS = function (v) {
    return Data_Lazy.force(v.value1);
};
var showContent = new Data_Show.Show(function (v) {
    if (v instanceof Txt) {
        return v.value0;
    };
    if (v instanceof P) {
        return "<p>" + (Data_Show.show(showContent)(v.value0) + "</p>");
    };
    if (v instanceof Styled && v.value0 instanceof Bold) {
        return "<b>" + (Data_Show.show(showContent)(v.value1) + "</b>");
    };
    if (v instanceof Styled && v.value0 instanceof Italic) {
        return "<i>" + (Data_Show.show(showContent)(v.value1) + "</i>");
    };
    throw new Error("Failed pattern match at Main (line 58, column 1 - line 62, column 65): " + [ v.constructor.name ]);
});
var showBuffer = new Data_Show.Show(function (v) {
    return "Row " + (Data_Show.show(Data_Show.showInt)(v.value0) + (" " + Data_Show.show(showContent)(v.value1)));
});
var setCaretOffset = function (dictMonadEffect) {
    return function (offset) {
        return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadEffect))(Caret.shiftOffset(offset));
    };
};
var printLine = function (v) {
    if (v instanceof Heading) {
        return Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(Data_Array.replicate(v.value0)("#")) + (" " + Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(printLine)(v.value1));
    };
    if (v instanceof Text) {
        return v.value0;
    };
    if (v instanceof ListItem) {
        return "- " + Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(printLine)(v.value0);
    };
    if (v instanceof Ann && v.value0.length === 0) {
        return "";
    };
    if (v instanceof Ann) {
        var txt = Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(printLine)(v.value0);
        if (v.value1 instanceof Bold) {
            return "**" + (txt + "**");
        };
        if (v.value1 instanceof Italic) {
            return "*" + (txt + "**");
        };
        throw new Error("Failed pattern match at Main (line 318, column 6 - line 320, column 36): " + [ v.value1.constructor.name ]);
    };
    throw new Error("Failed pattern match at Main (line 311, column 1 - line 311, column 28): " + [ v.constructor.name ]);
};
var isItalic = function (dictMonadEffect) {
    return Control_Monad_State_Class.gets(Halogen_Query_HalogenM.monadStateHalogenM)(function (s) {
        return s.toolbarState.italic;
    });
};
var isBold = function (dictMonadEffect) {
    return Control_Monad_State_Class.gets(Halogen_Query_HalogenM.monadStateHalogenM)(function (s) {
        return s.toolbarState.bold;
    });
};
var idStream = (function () {
    var go = function (i) {
        return new Stream(i, Data_Lazy.defer(function (v) {
            return go(i + 1 | 0);
        }));
    };
    return go(1);
})();
var initialState = function (v) {
    return {
        buffer: [ new Row(0, new Txt("")) ],
        toolbarState: {
            bold: false,
            italic: false,
            underline: false
        },
        freshIds: idStream
    };
};
var headS = function (v) {
    return v.value0;
};
var getCaretOffset = function (dictMonadEffect) {
    return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadEffect))(Caret.getOffset);
};
var focusRow = function (dictMonadEffect) {
    return function (i) {
        return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.gets(Halogen_Query_HalogenM.monadStateHalogenM)(function (s) {
            return Data_Array.index(s.buffer)(i);
        }))(function (row) {
            return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadEffect))(Effect_Console.log(Data_Show.show(Data_Maybe.showMaybe(showBuffer))(row))))(function () {
                if (row instanceof Data_Maybe.Nothing) {
                    return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                };
                if (row instanceof Data_Maybe.Just) {
                    return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.getHTMLElementRef(Halogen_Query_Input.RefLabel(Data_Show.show(Data_Show.showInt)(row.value0.value0))))(function (elem) {
                        return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadEffect))(function __do() {
                            var offSet = Caret.getOffset();
                            Data_Maybe.maybe(Effect_Class.liftEffect(Effect_Class.monadEffectEffect)(Effect_Console.log("did not find elem " + Data_Show.show(Data_Show.showInt)(row.value0.value0))))(Web_HTML_HTMLElement.focus)(elem)();
                            return Caret.shiftOffset(offSet)();
                        });
                    });
                };
                throw new Error("Failed pattern match at Main (line 171, column 3 - line 178, column 29): " + [ row.constructor.name ]);
            });
        });
    };
};
var focusNextRow = function (dictMonadEffect) {
    return function (id) {
        return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.gets(Halogen_Query_HalogenM.monadStateHalogenM)(function (s) {
            return s.buffer;
        }))(function (buffer) {
            var v = Data_Array.findIndex(function (v1) {
                return id === v1.value0;
            })(buffer);
            if (v instanceof Data_Maybe.Just && v.value0 < (Data_Array.length(buffer) - 1 | 0)) {
                return focusRow(dictMonadEffect)(v.value0 + 1 | 0);
            };
            return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
        });
    };
};
var flattenNodes = function (n) {
    if (Web_DOM_Node.nodeTypeIndex(n) === 3) {
        return Data_Functor.map(Effect.functorEffect)((function () {
            var $130 = Control_Applicative.pure(Control_Applicative.applicativeArray);
            return function ($131) {
                return $130(Text.create($131));
            };
        })())(Web_DOM_Node.textContent(n));
    };
    if (Web_DOM_Node.nodeTypeIndex(n) === 1) {
        return function __do() {
            var children$prime = Control_Bind.bindFlipped(Effect.bindEffect)(Web_DOM_NodeList.toArray)(Web_DOM_Node.childNodes(n))();
            var txts = Data_Functor.map(Effect.functorEffect)(Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Monoid.monoidArray))(Data_Traversable.traverse(Data_Traversable.traversableArray)(Effect.applicativeEffect)(flattenNodes)(children$prime))();
            var v = Web_DOM_Node.nodeName(n);
            if (v === "B") {
                return [ new Ann(txts, Bold.value) ];
            };
            if (v === "I") {
                return [ new Ann(txts, Italic.value) ];
            };
            if (v === "LI") {
                return [ new ListItem(txts) ];
            };
            if (v === "H1") {
                return [ new Heading(1, txts) ];
            };
            if (v === "H2") {
                return [ new Heading(2, txts) ];
            };
            if (v === "H3") {
                return [ new Heading(3, txts) ];
            };
            if (v === "H4") {
                return [ new Heading(4, txts) ];
            };
            if (v === "H5") {
                return [ new Heading(5, txts) ];
            };
            if (v === "H6") {
                return [ new Heading(6, txts) ];
            };
            return txts;
        };
    };
    if (Data_Boolean.otherwise) {
        return Control_Applicative.pure(Effect.applicativeEffect)([  ]);
    };
    throw new Error("Failed pattern match at Main (line 292, column 1 - line 292, column 46): " + [ n.constructor.name ]);
};
var fetchFreshVariable = function (dictMonadEffect) {
    return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.gets(Halogen_Query_HalogenM.monadStateHalogenM)(function (s) {
        return headS(s.freshIds);
    }))(function (fresh) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (s) {
            var $78 = {};
            for (var $79 in s) {
                if ({}.hasOwnProperty.call(s, $79)) {
                    $78[$79] = s[$79];
                };
            };
            $78.freshIds = tailS(s.freshIds);
            return $78;
        }))(function () {
            return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(fresh);
        });
    });
};
var editorToolbar = function (state) {
    return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.classes([ Data_Newtype.wrap()("box") ]) ])([ Halogen_HTML_Elements.div([ Halogen_HTML_Properties.classes([ Data_Newtype.wrap()("select") ]) ])([ Halogen_HTML_Elements.select([  ])([ Halogen_HTML_Elements.option([ Halogen_HTML_Events.onClick(function (v) {
        return new MkHeading(0);
    }) ])([ Halogen_HTML_Core.text("Normal") ]), Halogen_HTML_Elements.option([ Halogen_HTML_Events.onClick(function (v) {
        return new MkHeading(1);
    }) ])([ Halogen_HTML_Core.text("Heading 1") ]), Halogen_HTML_Elements.option([ Halogen_HTML_Events.onClick(function (v) {
        return new MkHeading(2);
    }) ])([ Halogen_HTML_Core.text("Heading 2") ]), Halogen_HTML_Elements.option([ Halogen_HTML_Events.onClick(function (v) {
        return new MkHeading(3);
    }) ])([ Halogen_HTML_Core.text("Heading 3") ]), Halogen_HTML_Elements.option([ Halogen_HTML_Events.onClick(function (v) {
        return new MkHeading(4);
    }) ])([ Halogen_HTML_Core.text("Heading 4") ]), Halogen_HTML_Elements.option([ Halogen_HTML_Events.onClick(function (v) {
        return new MkHeading(5);
    }) ])([ Halogen_HTML_Core.text("Heading 5") ]), Halogen_HTML_Elements.option([ Halogen_HTML_Events.onClick(function (v) {
        return new MkHeading(6);
    }) ])([ Halogen_HTML_Core.text("Heading 6") ]) ]) ]), Halogen_HTML_Elements.button([ Halogen_HTML_Properties.classes([ Data_Newtype.wrap()("button"), Data_Newtype.wrap()("is-inverted"), Data_Newtype.wrap()((function () {
        if (state.bold) {
            return "is-info";
        };
        return "is-dark";
    })()) ]), Halogen_HTML_Events.onClick(function (v) {
        return new ApplyStyle(Bold.value);
    }) ])([ Halogen_HTML_Elements.span([ Halogen_HTML_Properties.classes([ Data_Newtype.wrap()("fa"), Data_Newtype.wrap()("fa-bold"), Data_Newtype.wrap()("fa-fw") ]) ])([  ]) ]), Halogen_HTML_Elements.button([ Halogen_HTML_Properties.classes([ Data_Newtype.wrap()("button"), Data_Newtype.wrap()("is-inverted"), Data_Newtype.wrap()((function () {
        if (state.italic) {
            return "is-info";
        };
        return "is-dark";
    })()) ]), Halogen_HTML_Events.onClick(function (v) {
        return new ApplyStyle(Italic.value);
    }) ])([ Halogen_HTML_Elements.span([ Halogen_HTML_Properties.classes([ Data_Newtype.wrap()("fa"), Data_Newtype.wrap()("fa-italic"), Data_Newtype.wrap()("fa-fw") ]) ])([  ]) ]), Halogen_HTML_Elements.button([ Halogen_HTML_Properties.classes([ Data_Newtype.wrap()("button"), Data_Newtype.wrap()("is-inverted"), Data_Newtype.wrap()("is-dark") ]), Halogen_HTML_Events.onClick(function (v) {
        return MkList.value;
    }) ])([ Halogen_HTML_Elements.span([ Halogen_HTML_Properties.classes([ Data_Newtype.wrap()("fa"), Data_Newtype.wrap()("fa-list"), Data_Newtype.wrap()("fa-fw") ]) ])([  ]) ]) ]);
};
var editorRow = function (v) {
    return Halogen_HTML_Elements_Keyed.div_(Control_Applicative.pure(Control_Applicative.applicativeArray)(Data_Tuple.Tuple.create(Data_Show.show(Data_Show.showInt)(v.value0))(Halogen_HTML_Elements.p([ Halogen_HTML_Properties.classes([ Data_Newtype.wrap()("content") ]), Halogen_HTML_Properties.id(Data_Show.show(Data_Show.showInt)(v.value0)), Halogen_HTML_Properties.ref(Halogen_Query_Input.RefLabel(Data_Show.show(Data_Show.showInt)(v.value0))), Halogen_HTML_Properties.attr("contenteditable")("true"), Halogen_HTML_Events.onKeyDown(function (e) {
        return new KeyPress(v.value0, e);
    }) ])([ Halogen_HTML_Core.text(Data_Show.show(showContent)(v.value1)) ]))));
};
var editorRef = "editor";
var editorForm = function (rows) {
    return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.id("editor"), Halogen_HTML_Properties.ref(editorRef) ])(Data_Functor.map(Data_Functor.functorArray)(editorRow)(rows));
};
var render = function (state) {
    return Halogen_HTML_Elements.section([ Halogen_HTML_Properties.id("section") ])([ Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_(Data_Newtype.wrap()("columns")) ])([ Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_(Data_Newtype.wrap()("column")) ])([  ]), Halogen_HTML_Elements.div([ Halogen_HTML_Properties.classes([ Data_Newtype.wrap()("column"), Data_Newtype.wrap()("is-5") ]) ])([ editorToolbar(state.toolbarState), editorForm(state.buffer) ]), Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_(Data_Newtype.wrap()("column")) ])([  ]) ]) ]);
};
var bufferPreview = function (xs) {
    return Halogen_HTML_Elements.div_(Data_Functor.map(Data_Functor.functorArray)((function () {
        var $132 = Control_Applicative.pure(Control_Applicative.applicativeArray);
        return function ($133) {
            return Halogen_HTML_Elements.div_($132(Halogen_HTML_Core.text($133)));
        };
    })())(xs));
};
var applyStyle = function (style) {
    if (style instanceof Bold) {
        return Format.bold;
    };
    if (style instanceof Italic) {
        return Format.italic;
    };
    throw new Error("Failed pattern match at Main (line 163, column 20 - line 165, column 21): " + [ style.constructor.name ]);
};
var addRow = function (dictMonadEffect) {
    return function (focusedRow) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadEffect))(Effect_Console.log(Data_Show.show(Data_Show.showString)("focusedRow: " + Data_Show.show(Data_Show.showInt)(focusedRow)))))(function () {
            return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(fetchFreshVariable(dictMonadEffect))(function (i) {
                return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (state) {
                    var j = Data_Maybe.maybe(Data_Array.length(state.buffer))(Control_Category.identity(Control_Category.categoryFn))(Data_Array.findIndex(function (v) {
                        return v.value0 === focusedRow;
                    })(state.buffer));
                    var res = Data_Array.splitAt(j + 1 | 0)(state.buffer);
                    var $90 = {};
                    for (var $91 in state) {
                        if ({}.hasOwnProperty.call(state, $91)) {
                            $90[$91] = state[$91];
                        };
                    };
                    $90.buffer = Data_Semigroup.append(Data_Semigroup.semigroupArray)(res.before)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ new Row(i, new Txt("")) ])(res.after));
                    return $90;
                }))(function () {
                    return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.getHTMLElementRef(Halogen_Query_Input.RefLabel(Data_Show.show(Data_Show.showInt)(i))))(function (rowTag$prime) {
                        if (rowTag$prime instanceof Data_Maybe.Nothing) {
                            return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                        };
                        if (rowTag$prime instanceof Data_Maybe.Just) {
                            return Halogen_Query_HalogenM["subscribe'"](function (v) {
                                var toInputChanged = function (r$prime) {
                                    return new InputChanged(r$prime.id, r$prime.content);
                                };
                                return Halogen_Query_Event.eventListener(Web_UIEvent_InputEvent_EventTypes.input)(Web_HTML_HTMLElement.toEventTarget(rowTag$prime.value0))((function () {
                                    var $134 = Data_Functor.map(Data_Maybe.functorMaybe)(function ($136) {
                                        return toInputChanged(Editor.getValue($136));
                                    });
                                    return function ($135) {
                                        return $134(Web_UIEvent_InputEvent.fromEvent($135));
                                    };
                                })());
                            });
                        };
                        throw new Error("Failed pattern match at Main (line 202, column 3 - line 207, column 118): " + [ rowTag$prime.constructor.name ]);
                    });
                });
            });
        });
    };
};
var handleAction = function (dictMonadEffect) {
    return function (action) {
        if (action instanceof Initialize) {
            return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(focusRow(dictMonadEffect)(0))(function () {
                return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.getHTMLElementRef(Halogen_Query_Input.RefLabel(Data_Show.show(Data_Show.showInt)(0))))(function (editorDiv$prime) {
                    if (editorDiv$prime instanceof Data_Maybe.Nothing) {
                        return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                    };
                    if (editorDiv$prime instanceof Data_Maybe.Just) {
                        return Halogen_Query_HalogenM["subscribe'"](function (v) {
                            var toInputChanged = function (r) {
                                return new InputChanged(r.id, r.content);
                            };
                            return Halogen_Query_Event.eventListener(Web_UIEvent_InputEvent_EventTypes.input)(Web_HTML_HTMLElement.toEventTarget(editorDiv$prime.value0))((function () {
                                var $137 = Data_Functor.map(Data_Maybe.functorMaybe)(function ($139) {
                                    return toInputChanged(Editor.getValue($139));
                                });
                                return function ($138) {
                                    return $137(Web_UIEvent_InputEvent.fromEvent($138));
                                };
                            })());
                        });
                    };
                    throw new Error("Failed pattern match at Main (line 116, column 7 - line 121, column 125): " + [ editorDiv$prime.constructor.name ]);
                });
            });
        };
        if (action instanceof InputChanged) {
            return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(getCaretOffset(dictMonadEffect))(function (offset) {
                return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(isBold(dictMonadEffect))(function (isBold$prime) {
                    return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (s) {
                        var buffer$prime = Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Array.findIndex(function (v) {
                            return action.value0 === Data_Show.show(Data_Show.showInt)(v.value0);
                        })(s.buffer))(function (i) {
                            return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Int.fromString(action.value0))(function (id$prime) {
                                if (isBold$prime) {
                                    return Data_Array.updateAt(i)(new Row(id$prime, new Styled(Bold.value, new Txt(action.value1))))(s.buffer);
                                };
                                return Data_Array.updateAt(i)(new Row(id$prime, new Txt(action.value1)))(s.buffer);
                            });
                        });
                        var $102 = {};
                        for (var $103 in s) {
                            if ({}.hasOwnProperty.call(s, $103)) {
                                $102[$103] = s[$103];
                            };
                        };
                        $102.buffer = Data_Maybe.maybe(s.buffer)(Control_Category.identity(Control_Category.categoryFn))(buffer$prime);
                        return $102;
                    }))(function () {
                        return setCaretOffset(dictMonadEffect)(offset);
                    });
                });
            });
        };
        if (action instanceof KeyPress && Web_UIEvent_KeyboardEvent.key(action.value1) === "Enter") {
            return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadEffect))(function __do() {
                Web_Event_Event.preventDefault(Web_UIEvent_KeyboardEvent.toEvent(action.value1))();
                return Web_Event_Event.stopPropagation(Web_UIEvent_KeyboardEvent.toEvent(action.value1))();
            }))(function () {
                return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(addRow(dictMonadEffect)(action.value0))(function () {
                    return focusRow(dictMonadEffect)(action.value0 + 1 | 0);
                });
            });
        };
        if (action instanceof KeyPress && Web_UIEvent_KeyboardEvent.key(action.value1) === "ArrowUp") {
            return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadEffect))(Web_Event_Event.preventDefault(Web_UIEvent_KeyboardEvent.toEvent(action.value1))))(function () {
                return focusRow(dictMonadEffect)(action.value0 - 1 | 0);
            });
        };
        if (action instanceof KeyPress && Web_UIEvent_KeyboardEvent.key(action.value1) === "ArrowDown") {
            return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadEffect))(Web_Event_Event.preventDefault(Web_UIEvent_KeyboardEvent.toEvent(action.value1))))(function () {
                return focusNextRow(dictMonadEffect)(action.value0);
            });
        };
        if (action instanceof KeyPress) {
            return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (s) {
                return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(getCaretOffset(dictMonadEffect))(function (offset) {
                    return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadEffect))(function __do() {
                        Effect_Console.log("CARET OFFSET: " + Data_Show.show(Data_Show.showInt)(offset))();
                        return Effect_Console.log(Data_Show.show(Data_Show.showArray(showBuffer))(s.buffer))();
                    });
                });
            });
        };
        if (action instanceof ApplyStyle) {
            return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadEffect))(applyStyle(action.value0)))(function () {
                if (action.value0 instanceof Bold) {
                    return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (state) {
                        var $119 = {};
                        for (var $120 in state) {
                            if ({}.hasOwnProperty.call(state, $120)) {
                                $119[$120] = state[$120];
                            };
                        };
                        $119.toolbarState = (function () {
                            var $116 = {};
                            for (var $117 in state.toolbarState) {
                                if ({}.hasOwnProperty.call(state.toolbarState, $117)) {
                                    $116[$117] = state["toolbarState"][$117];
                                };
                            };
                            $116.bold = !state.toolbarState.bold;
                            return $116;
                        })();
                        return $119;
                    });
                };
                if (action.value0 instanceof Italic) {
                    return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (state) {
                        var $125 = {};
                        for (var $126 in state) {
                            if ({}.hasOwnProperty.call(state, $126)) {
                                $125[$126] = state[$126];
                            };
                        };
                        $125.toolbarState = (function () {
                            var $122 = {};
                            for (var $123 in state.toolbarState) {
                                if ({}.hasOwnProperty.call(state.toolbarState, $123)) {
                                    $122[$123] = state["toolbarState"][$123];
                                };
                            };
                            $122.italic = !state.toolbarState.italic;
                            return $122;
                        })();
                        return $125;
                    });
                };
                throw new Error("Failed pattern match at Main (line 154, column 7 - line 156, column 103): " + [ action.value0.constructor.name ]);
            });
        };
        if (action instanceof MkList) {
            return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadEffect))(Format.mkList);
        };
        if (action instanceof MkHeading) {
            return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadEffect))(Format.mkHeading(action.value0));
        };
        throw new Error("Failed pattern match at Main (line 112, column 3 - line 160, column 33): " + [ action.constructor.name ]);
    };
};
var component = function (dictMonadEffect) {
    return Halogen_Component.mkComponent({
        initialState: initialState,
        render: render,
        "eval": Halogen_Component.mkEval({
            handleAction: handleAction(dictMonadEffect),
            handleQuery: Halogen_Component.defaultEval.handleQuery,
            receive: Halogen_Component.defaultEval.receive,
            initialize: new Data_Maybe.Just(Initialize.value),
            finalize: Halogen_Component.defaultEval.finalize
        })
    });
};
var main = Halogen_Aff_Util.runHalogenAff(Control_Bind.bind(Effect_Aff.bindAff)(Halogen_Aff_Util.awaitBody)(function (body) {
    return Halogen_VDom_Driver.runUI(component(Effect_Aff.monadEffectAff))(Data_Unit.unit)(body);
}));
module.exports = {
    main: main,
    component: component,
    Styled: Styled,
    P: P,
    Txt: Txt,
    Bold: Bold,
    Italic: Italic,
    Row: Row,
    initialState: initialState,
    Stream: Stream,
    headS: headS,
    tailS: tailS,
    idStream: idStream,
    fetchFreshVariable: fetchFreshVariable,
    getCaretOffset: getCaretOffset,
    setCaretOffset: setCaretOffset,
    isBold: isBold,
    isItalic: isItalic,
    Initialize: Initialize,
    InputChanged: InputChanged,
    KeyPress: KeyPress,
    ApplyStyle: ApplyStyle,
    MkList: MkList,
    MkHeading: MkHeading,
    handleAction: handleAction,
    applyStyle: applyStyle,
    focusRow: focusRow,
    focusNextRow: focusNextRow,
    addRow: addRow,
    render: render,
    bufferPreview: bufferPreview,
    editorRef: editorRef,
    editorToolbar: editorToolbar,
    editorForm: editorForm,
    editorRow: editorRow,
    Heading: Heading,
    ListItem: ListItem,
    Text: Text,
    Ann: Ann,
    flattenNodes: flattenNodes,
    printLine: printLine,
    showContent: showContent,
    showBuffer: showBuffer
};
